{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "datafactorychpa"
		},
		"AzureBlobStorage1_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureBlobStorage1'"
		},
		"AzureSynapseAnalytics1_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureSynapseAnalytics1'"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/AzureBlobStorage1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('AzureBlobStorage1_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSynapseAnalytics1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDW",
				"typeProperties": {
					"connectionString": "[parameters('AzureSynapseAnalytics1_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ClassHorseStudentInput')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage1",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "RidingSchool"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "classesHorseStudent.csv",
						"container": "input"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "ClassID",
						"type": "String"
					},
					{
						"name": "StudentID",
						"type": "String"
					},
					{
						"name": "HorseName",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ClassInput')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage1",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "RidingSchool"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "classes.csv",
						"container": "input"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "ClassID",
						"type": "String"
					},
					{
						"name": "Start",
						"type": "String"
					},
					{
						"name": "Finish",
						"type": "String"
					},
					{
						"name": "TeacherID",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/HorseInput')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage1",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "RidingSchool"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "horses.csv",
						"container": "input"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Name",
						"type": "String"
					},
					{
						"name": "Breed",
						"type": "String"
					},
					{
						"name": "HeightCm",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/RidingSchoolOutput')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage1",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "RidingSchool"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "output"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/StudentInput')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage1",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "RidingSchool"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "students.csv",
						"container": "input"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "ID",
						"type": "String"
					},
					{
						"name": "Name",
						"type": "String"
					},
					{
						"name": "BornYear",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/TeacherInput')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage1",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "RidingSchool"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "teachers.csv",
						"container": "input"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "ID",
						"type": "String"
					},
					{
						"name": "Name",
						"type": "String"
					},
					{
						"name": "HourlySalary",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/HorsesOutputSynapse')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSynapseAnalytics1",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "RidingSchool"
				},
				"annotations": [],
				"type": "AzureSqlDWTable",
				"schema": [
					{
						"name": "Name",
						"type": "varchar"
					},
					{
						"name": "Breed",
						"type": "varchar"
					},
					{
						"name": "HeightCm",
						"type": "int",
						"precision": 10
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "Horses2"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSynapseAnalytics1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Create Riding School Transformations')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "ClassInput",
								"type": "DatasetReference"
							},
							"name": "classdata"
						},
						{
							"dataset": {
								"referenceName": "ClassHorseStudentInput",
								"type": "DatasetReference"
							},
							"name": "classhorsestudentdata"
						},
						{
							"dataset": {
								"referenceName": "TeacherInput",
								"type": "DatasetReference"
							},
							"name": "teacherdata"
						},
						{
							"dataset": {
								"referenceName": "StudentInput",
								"type": "DatasetReference"
							},
							"name": "studentdata"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "RidingSchoolOutput",
								"type": "DatasetReference"
							},
							"name": "FinishedFact"
						},
						{
							"dataset": {
								"referenceName": "RidingSchoolOutput",
								"type": "DatasetReference"
							},
							"name": "StudentOutput"
						},
						{
							"dataset": {
								"referenceName": "RidingSchoolOutput",
								"type": "DatasetReference"
							},
							"name": "TeacherOutput"
						}
					],
					"transformations": [
						{
							"name": "JoinClassHorseStudent"
						},
						{
							"name": "JoinTeacher"
						},
						{
							"name": "JoinStudent"
						},
						{
							"name": "CostTurnoverColumns"
						},
						{
							"name": "Select1"
						},
						{
							"name": "StudentAgeGroup"
						}
					],
					"script": "source(output(\n\t\tClassID as string,\n\t\tStart as timestamp 'MM-dd-yyyy HH:mm:ss',\n\t\tFinish as timestamp 'MM-dd-yyyy HH:mm:ss',\n\t\tTeacherID as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinferDriftedColumnTypes: true,\n\tignoreNoFilesFound: false,\n\tpartitionBy('hash', 1)) ~> classdata\nsource(output(\n\t\tClassID as string,\n\t\tStudentID as string,\n\t\tHorseName as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> classhorsestudentdata\nsource(output(\n\t\tID as string,\n\t\tName as string,\n\t\tHourlySalary as integer\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> teacherdata\nsource(output(\n\t\tID as string,\n\t\tName as string,\n\t\tBornYear as integer\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tpartitionBy('hash', 1)) ~> studentdata\nclassdata, classhorsestudentdata join(classdata@ClassID == classhorsestudentdata@ClassID,\n\tjoinType:'inner',\n\tpartitionBy('hash', 1),\n\tbroadcast: 'auto')~> JoinClassHorseStudent\nJoinClassHorseStudent, teacherdata join(TeacherID == ID,\n\tjoinType:'left',\n\tpartitionBy('hash', 1),\n\tbroadcast: 'auto')~> JoinTeacher\nJoinTeacher, StudentAgeGroup join(StudentID == studentdata@ID,\n\tjoinType:'inner',\n\tpartitionBy('hash', 1),\n\tbroadcast: 'auto')~> JoinStudent\nJoinStudent derive(ClassDurationHour = hour(toTimestamp(Finish -Start)),\n\t\tUnitCost = hour(toTimestamp(Finish -Start) ) * HourlySalary,\n\t\tUnitTurnover = case( StudentAgeGroup== 'Adult', hour(toTimestamp(Finish -Start) ) * 39, hour(toTimestamp(Finish -Start) ) * 30),\n\t\tUnitProfit = case( StudentAgeGroup== 'Adult', hour(toTimestamp(Finish -Start) ) * 39, hour(toTimestamp(Finish -Start) ) * 30) - hour(toTimestamp(Finish -Start) ) * HourlySalary) ~> CostTurnoverColumns\nCostTurnoverColumns select(mapColumn(\n\t\tClassStart = Start,\n\t\tClassFinish = Finish,\n\t\tTeacherID,\n\t\tStudentID,\n\t\tHorseName,\n\t\tTeacherName = teacherdata@Name,\n\t\tTeacherHourlySalary = HourlySalary,\n\t\tStudentName = studentdata@Name,\n\t\tStudentAgeGroup,\n\t\tClassDurationHour,\n\t\tUnitCost,\n\t\tUnitTurnover,\n\t\tUnitProfit\n\t),\n\tpartitionBy('hash', 1),\n\tskipDuplicateMapInputs: false,\n\tskipDuplicateMapOutputs: true) ~> Select1\nstudentdata derive(StudentAgeGroup = case(year(currentDate()) - BornYear> 17,'Adult','Child')) ~> StudentAgeGroup\nSelect1 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['RidingSchoolFact.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> FinishedFact\nStudentAgeGroup sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['StudentOutput.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> StudentOutput\nteacherdata sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['TeacherOutput.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> TeacherOutput"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ClassInput')]",
				"[concat(variables('factoryId'), '/datasets/ClassHorseStudentInput')]",
				"[concat(variables('factoryId'), '/datasets/TeacherInput')]",
				"[concat(variables('factoryId'), '/datasets/StudentInput')]",
				"[concat(variables('factoryId'), '/datasets/RidingSchoolOutput')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/blobtodatafactorytosynapse')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "HorseInput",
								"type": "DatasetReference"
							},
							"name": "Horses"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "HorsesOutputSynapse",
								"type": "DatasetReference"
							},
							"name": "LargeHorses"
						}
					],
					"transformations": [
						{
							"name": "Over150cm"
						}
					],
					"script": "source(output(\n\t\tName as string,\n\t\tBreed as string,\n\t\tHeightCm as integer\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tpartitionBy('hash', 1)) ~> Horses\nHorses filter(HeightCm > 150,\n\tpartitionBy('hash', 1)) ~> Over150cm\nOver150cm sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tName as string,\n\t\tBreed as string,\n\t\tHeightCm as integer\n\t),\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\ttruncate:true,\n\tformat: 'table',\n\tstaged: true,\n\tallowCopyCommand: true,\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError',\n\tpartitionBy('hash', 1)) ~> LargeHorses"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/HorseInput')]",
				"[concat(variables('factoryId'), '/datasets/HorsesOutputSynapse')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/RidingSchool')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Pipieline for Riding School database",
				"activities": [
					{
						"name": "Copy Horse Data",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".csv"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "HorseInput",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "RidingSchoolOutput",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Transformations",
						"description": "Create one big fact table and enrichen student info",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "Create Riding School Transformations",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"classdata": {},
									"classhorsestudentdata": {},
									"teacherdata": {},
									"studentdata": {},
									"FinishedFact": {},
									"StudentOutput": {},
									"TeacherOutput": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "HorsestoSynapse",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "Copy Horse Data",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "blobtodatafactorytosynapse",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"Horses": {},
									"LargeHorses": {}
								}
							},
							"staging": {
								"linkedService": {
									"referenceName": "AzureBlobStorage1",
									"type": "LinkedServiceReference"
								},
								"folderPath": "clients"
							},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "None",
							"cacheSinks": {
								"firstRowOnly": true
							}
						}
					}
				],
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/HorseInput')]",
				"[concat(variables('factoryId'), '/datasets/RidingSchoolOutput')]",
				"[concat(variables('factoryId'), '/dataflows/Create Riding School Transformations')]",
				"[concat(variables('factoryId'), '/dataflows/blobtodatafactorytosynapse')]",
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage1')]"
			]
		}
	]
}