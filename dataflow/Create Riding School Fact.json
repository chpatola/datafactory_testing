{
	"name": "Create Riding School Fact",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "ClassInput",
						"type": "DatasetReference"
					},
					"name": "classdata"
				},
				{
					"dataset": {
						"referenceName": "ClassHorseStudentInput",
						"type": "DatasetReference"
					},
					"name": "classhorsestudentdata"
				},
				{
					"dataset": {
						"referenceName": "TeacherInput",
						"type": "DatasetReference"
					},
					"name": "teacherdata"
				}
			],
			"sinks": [],
			"transformations": [
				{
					"name": "JoinClassHorseStudent"
				},
				{
					"name": "JoinTeacher"
				}
			],
			"script": "source(output(\n\t\tClassID as string,\n\t\tStart as string,\n\t\tFinish as string,\n\t\tTeacherID as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinferDriftedColumnTypes: true,\n\tignoreNoFilesFound: false,\n\tpartitionBy('hash', 1)) ~> classdata\nsource(output(\n\t\tClassID as string,\n\t\tStudentID as string,\n\t\tHorseName as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> classhorsestudentdata\nsource(output(\n\t\tID as string,\n\t\tName as string,\n\t\tHourlySalary as integer\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> teacherdata\nclassdata, classhorsestudentdata join(classdata@ClassID == classhorsestudentdata@ClassID,\n\tjoinType:'inner',\n\tpartitionBy('hash', 1),\n\tbroadcast: 'auto')~> JoinClassHorseStudent\nJoinClassHorseStudent, teacherdata join(ERROR_FUNCTION('') == teacherdata@ID,\n\tjoinType:'left',\n\tbroadcast: 'auto')~> JoinTeacher"
		}
	}
}